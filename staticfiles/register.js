function getCSRFToken() {
    return document.cookie.split('; ')
        .find(row => row.startsWith('csrftoken='))
        ?.split('=')[1];
}

document.addEventListener("DOMContentLoaded", function () {
    console.log("‚úÖ JS –∑–∞–≥—Ä—É–∂–µ–Ω!");

    const form = document.querySelector("#email-form");
    const verifySection = document.querySelector("#verify-section");
    const verificationInput = document.querySelector("#verification-code");
    let verifyButton = document.querySelector("#verify-form button");

    // ‚úÖ –ö–ù–û–ü–ö–ê –í–û–ó–í–†–ê–¢–ê –ù–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–Æ
    // const backToLogin = document.createElement("p");
    // backToLogin.innerHTML = '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="/login/" id="back-to-login">–í–æ–π—Ç–∏</a>';
    // backToLogin.style.marginTop = "10px";
    // form.appendChild(backToLogin);

    // ‚úÖ –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏
    const errorMessage = document.createElement("p");
    errorMessage.style.color = "red";
    errorMessage.style.marginTop = "10px";
    form.appendChild(errorMessage);

    if (form) {
        console.log("‚úÖ –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω–∞!");

        form.addEventListener("submit", function (e) {
            e.preventDefault();

            let emailInput = document.querySelector("#email").value.trim();
            console.log("üì© –í–≤–µ–¥–µ–Ω–Ω—ã–π email:", emailInput);

            if (!emailInput.endsWith("@auca.kg")) {
                errorMessage.textContent = "‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ—á—Ç—É @auca.kg!";
                return;
            }

            console.log("‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ API...");
            fetch("/api/send_verification_code/", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email: emailInput })
            })
            .then(response => response.json())
            .then(data => {
                console.log("üì® –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
                if (data.success) {
                    errorMessage.textContent = ""; // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É
                    alert("‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.");
                    verifySection.style.display = "block";
                    verifyButton.setAttribute("data-email", emailInput);
                } else {
                    errorMessage.textContent = "‚ùå " + data.error; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                }
            })
            .catch(error => {
                console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞:", error);
                errorMessage.textContent = "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            });
        });
    } else {
        console.warn("‚ö†Ô∏è –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
    }

    if (verifyButton) {
        verifyButton.type = "button";
        verifyButton.addEventListener("click", function (e) {
            e.preventDefault();

            let email = verifyButton.getAttribute("data-email");
            let codeInput = verificationInput.value.trim();

            if (!codeInput) {
                alert("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!");
                return;
            }

            console.log("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏...");

            fetch("/api/verify_code/", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email: email, code: codeInput })
            })
            .then(response => response.json())
            .then(data => {
                console.log("üì® –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é:", data);
                if (data.success) {
                    window.location.href = "/register_form/";
                } else {
                    alert("‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: " + data.error);
                }
            })
            .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–æ–¥–∞:", error));
        });
    } else {
        console.warn("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
    }
});
